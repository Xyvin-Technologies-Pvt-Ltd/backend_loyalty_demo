name: Loyalty Backend Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy-loyalty-backend:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: loyalty-backend-img
      CONTAINER_NAME: loyalty-backend-container
      DEPLOY_DIR: /home/ubuntu/loyalty-backend
      ENV_FILE_PATH: /home/ubuntu/loyalty/.env/.env.production
      UPLOADS_DIR: /home/loyalty/loyalty-uploads

    steps:

    # üì• Step 1: Checkout Source Code
    - name: Checkout code
      uses: actions/checkout@v3

    # üõ†Ô∏è Step 2: Build Docker image in runner
    - name: Build Docker image
      run: |
        docker build -t ${{ env.IMAGE_NAME }} .

    # üì¶ Step 3: Save Docker image to .tar file
    - name: Save Docker image as tarball
      run: |
        docker save -o ${{ env.IMAGE_NAME }}.tar ${{ env.IMAGE_NAME }}

    # üì§ Step 4: Copy Docker image tarball to server
    - name: Upload Docker image to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: 22
        source: "${{ env.IMAGE_NAME }}.tar"
        target: "/home/ubuntu"

    # üöÄ Step 5: SSH into server and load + run Docker image
    - name: Deploy on server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: 22

        script: |
          set -e

          echo "üì¶ Loading Docker image from tarball..."
          docker load -i /home/ubuntu/${{ env.IMAGE_NAME }}.tar

          echo "üßπ Cleaning old container (if exists)..."
          docker stop ${{ env.CONTAINER_NAME }} || true
          docker rm ${{ env.CONTAINER_NAME }} || true

          echo "üìÅ Ensuring upload and deploy directories exist..."
          mkdir -p ${{ env.UPLOADS_DIR }}
          mkdir -p ${{ env.DEPLOY_DIR }}
          cd ${{ env.DEPLOY_DIR }}

          echo "üìÑ Checking for .env file..."
          if [ -f "${{ env.ENV_FILE_PATH }}" ]; then
            cp ${{ env.ENV_FILE_PATH }} .env
            echo "‚úÖ .env copied."
          else
            echo "‚ùå .env file not found!"
            exit 1
          fi

          echo "üöÄ Starting Docker container..."
          docker run -d \
            --name ${{ env.CONTAINER_NAME }} \
            --network myapp-network \
            --restart always \
            -p 3000:3000 \
            --env-file .env \
            -v ${{ env.UPLOADS_DIR }}:/app/uploads \
            ${{ env.IMAGE_NAME }}

          echo "‚úÖ Deployment successful!"
